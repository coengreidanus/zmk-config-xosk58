/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <350>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <350>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        escapeCombo {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };

        tabCombo {
            bindings = <&kp TAB>;
            key-positions = <25 26>;
        };

        capsCombo {
            bindings = <&kp CAPS>;
            key-positions = <37 38>;
        };

        backspaceCOMBO {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
        };

        spaceCOMBO {
            bindings = <&kp SPACE>;
            key-positions = <40 41>;
        };

        numpadCombo {
            bindings = <&tog 6>;
            key-positions = <28 29>;
        };
    };

    macros {
        enterExit: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &tog 6>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        togKP: togKP {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGKP";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };

        capsLGUI: capsLGUI {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPSLGUI";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        rsthanoi {
            bindings = <
&kp ESCAPE  &kp N1       &kp N2      &kp N3      &kp N4        &kp N5                                 &kp N6         &kp N7        &kp N8      &kp N9      &kp N0       &kp BSPC
&kp TAB     &kp B        &kp M       &kp C       &kp P         &kp J                                  &kp SEMICOLON  &kp U         &kp L       &kp Y       &kp SQT      &kp BSLH
&kp LCTRL   &mt LCTRL R  &mt LGUI S  &mt LALT T  &mt LSHIFT H  &kp V                                  &kp K          &mt RSHIFT A  &mt RALT N  &mt RGUI O  &mt LCTRL I  &kp ENTER
&kp LSHIFT  &kp Z        &kp W       &kp F       &kp D         &kp Q    &kp LBKT       &kp RBKT       &kp SLASH      &kp G         &kp COMMA   &kp PERIOD  &kp X        &kp RSHIFT
                                     &kp LALT    &kp LSHIFT    &lt 2 E  &lt 3 ENTER    &kp BACKSPACE  &lt 4 SPACE    &kp DEL       &kp RALT
            >;

            label = "rsthanoi58";
        };

        Qwerty {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1       &kp N2      &kp N3      &kp N4        &kp N5                                &kp N6       &kp N7        &kp N8      &kp N9      &kp N0               &kp BACKSPACE
&kp TAB    &kp Q        &kp W       &kp E       &kp R         &kp T                                 &kp Y        &kp U         &kp I       &kp O       &kp P                &kp BACKSLASH
&kp LCTRL  &mt LCTRL A  &mt LGUI S  &mt LALT D  &mt LSHIFT F  &kp G                                 &kp H        &mt RSHIFT J  &mt RALT K  &mt RGUI L  &mt RCTRL SEMICOLON  &kp ENTER
&kp LSHFT  &kp Z        &kp X       &kp C       &kp V         &kp B   &kp LBKT       &kp RBKT       &kp N        &kp M         &kp COMMA   &kp DOT     &kp FSLH             &kp RSHIFT
                                    &kp LALT    &kp LSHFT     &mo 2   &lt 3 ENTER    &kp BACKSPACE  &lt 4 SPACE  &kp DEL       &kp RALT
            >;

            label = "Qwerty58";
        };

        SymbolLayer {
            bindings = <
&trans  &trans           &trans           &trans                     &trans                        &trans                                           &trans        &trans               &trans        &trans             &trans               &trans
&trans  &kp EXCLAMATION  &kp AT           &kp LEFT_BRACE             &kp RIGHT_BRACE               &kp TILDE                                        &kp PLUS      &kp NUMBER_1         &kp NUMBER_2  &kp NUMBER_3       &kp PIPE             &trans
&trans  &mt LCTRL HASH   &mt LGUI DOLLAR  &mt LALT LEFT_PARENTHESIS  &mt LSHIFT RIGHT_PARENTHESIS  &kp UNDERSCORE                                   &kp MINUS     &mt RSHIFT NUMBER_4  &mt RALT N5   &mt RGUI NUMBER_6  &mt RCTRL AMPERSAND  &trans
&trans  &kp PERCENT      &kp CARET        &kp LEFT_BRACKET           &kp RIGHT_BRACKET             &kp GRAVE       &kp DOUBLE_QUOTES    &kp SQT     &kp ASTERISK  &kp N7               &kp N8        &kp N9             &kp SLASH            &trans
                                          &trans                     &kp DOUBLE_QUOTES             &trans          &kp SQT              &kp PERIOD  &kp N0        &kp EQUAL            &trans
            >;

            label = "SymbolLayer";
        };

        Navigation {
            bindings = <
&trans        &kp LS(EXCL)    &kp LS(AT)        &kp LS(POUND)     &kp LS(DLLR)            &kp LS(PRCNT)                                              &kp LS(CARET)   &kp LS(AMPS)    &kp LS(STAR)  &kp LS(LPAR)     &kp LS(RPAR)          &trans
&trans        &kp DELETE      &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)        &kp BACKSPACE                                              &kp K_CUT       &kp K_COPY      &kp K_PASTE   &kp K_UNDO       &kp K_REDO            &kp LS(PIPE)
&trans        &kp LEFT_SHIFT  &kp LG(NUMBER_4)  &kp LG(N5)        &kp LG(NUMBER_6)        &kp LG(Q)                                                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &capsLGUI LS(LGUI) 0  &trans
&kp CAPSLOCK  &mo 5           &kp LG(N7)        &kp LG(N8)        &kp LG(N9)              &kp LG(N0)              &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp HOME        &kp PG_DN       &kp PG_UP     &kp END          &mo 5                 &trans
                                                &trans            &kp LG(LS(DOWN_ARROW))  &kp LS(LG(DOWN_ARROW))  &trans            &trans           &trans          &trans          &trans
            >;

            label = "Navigation";
        };

        Media {
            bindings = <
&trans  &trans         &trans               &trans                &trans                   &trans                        &trans   &trans         &trans       &trans       &trans         &trans
&trans  &kp ESCAPE     &kp C_MUTE           &kp C_VOL_DN          &kp C_VOL_UP             &kp C_MUTE                    &kp F10  &kp F1         &kp F2       &kp F3       &kp ESCAPE     &trans
&trans  &mt LCTRL TAB  &mt LGUI C_PREVIOUS  &mt LALT C_STOP       &mt LSHIFT C_PLAY_PAUSE  &kp C_NEXT                    &kp F11  &mt RSHIFT F4  &mt RALT F5  &mt RGUI F6  &mt RCTRL TAB  &trans
&trans  &kp CAPSLOCK   &none                &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC     &none       &trans    &trans  &kp F12  &kp F7         &kp F8       &kp F9       &to 5          &trans
                                            &trans                &none                    &none       &none     &trans  &none    &none          &trans
            >;

            label = "Media";
        };

        BluetoothPower {
            bindings = <
&trans  &trans      &trans        &trans        &trans        &trans                        &trans      &trans        &trans        &trans        &trans      &trans
&trans  &sys_reset  &bootloader   &out OUT_BLE  &out OUT_USB  &to 7                         &to 7       &out OUT_USB  &out OUT_BLE  &bootloader   &sys_reset  &trans
&trans  &trans      &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 4  &trans                        &trans      &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans
&trans  &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans    &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans      &trans
                                  &trans        &none         &none       &trans    &none   &none       &none         &trans
            >;

            label = "BluetoothPower";
        };

        StickyNumPad {
            bindings = <
&trans  &trans              &trans                &trans                         &trans                          &trans                                                      &trans                &trans                         &trans                          &trans                &trans              &trans
&trans  &mt EXCL PIPE       &mt AT_SIGN NUMBER_1  &mt LEFT_BRACE NUMBER_2        &mt RIGHT_BRACE NUMBER_3        &mt TILDE PLUS                                              &mt TILDE PLUS        &mt LEFT_BRACE NUMBER_1        &mt RIGHT_BRACE NUMBER_2        &mt AT_SIGN NUMBER_3  &mt EXCL PIPE       &trans
&trans  &mt HASH AMPERSAND  &mt DOLLAR NUMBER_4   &mt LEFT_PARENTHESIS NUMBER_5  &mt RIGHT_PARENTHESIS NUMBER_6  &mt UNDERSCORE MINUS                                        &mt UNDERSCORE MINUS  &mt LEFT_PARENTHESIS NUMBER_4  &mt RIGHT_PARENTHESIS NUMBER_5  &mt DOLLAR NUMBER_6   &mt HASH AMPERSAND  &trans
&trans  &mt PERCENT SLASH   &mt CARET N7          &mt LEFT_BRACKET N8            &mt RIGHT_BRACKET N9            &mt GRAVE ASTERISK    &trans              &trans            &mt GRAVE ASTERISK    &mt LEFT_BRACKET N7            &mt RIGHT_BRACKET N8            &mt CARET N9          &mt PERCENT SLASH   &trans
                                                  &trans                         &mt BACKSPACE EQUAL             &kp N0                &mt ENTER PERIOD    &mt ENTER PERIOD  &kp N0                &mt BACKSPACE EQUAL            &trans
            >;
        };

        Lock {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &mo 8    &mo 8  &none  &none  &none
            >;

            label = "Lock";
        };

        Unlock {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &mo 9  &none  &none  &none  &none  &none     &none   &none  &none  &none  &none  &mo 9  &none
                     &none  &none  &none  &trans    &trans  &none  &none  &none
            >;

            label = "Unlock";
        };

        UnlockConfirm {
            bindings = <
&none  &none   &none   &none   &none  &none                    &none  &none  &none   &none   &none   &none
&none  &trans  &trans  &trans  &to 1  &to 0                    &to 0  &to 1  &trans  &trans  &trans  &none
&none  &none   &none   &none   &none  &none                    &none  &none  &none   &none   &none   &none
&none  &trans  &none   &none   &none  &none  &none     &none   &none  &none  &none   &none   &trans  &none
                       &none   &none  &none  &trans    &trans  &none  &none  &none
            >;

            label = "UnlockConfirm";
        };
    };
};

/*
*
https://caksoylar.github.io/keymap-drawer?keymap_yaml=H4sIAAAAAAAC_-0Z7XLaRvB_nkJt0lw-7NoY7DjKZKYSkgyJkGR9gGkau3JQbQYZJVhuhnHpY-Rt8jJ9kkq3py84ZBCQOlN5xrvL7mlv72N3725de-zd-Cxz--lqcDZwxueePeqxjNt3x_uHZyPPt32nN3ng2mNndM0-YJjRtX9pD71-SG8zolHHGFUQ4D2CqwTXCN4n-IDgFwQfEvyS4F3AvKGBYpPjgYFhC0OQaBi-wfAVhhaGMoZdUBf8YeI3ENVNHcS3wZD1LeaSBd4kZhrAPLKaCc8EHiebCa8BPKPRlAi3jeHbuAWHW-ipFiFXAW5Glwq8TJ_NaeNExRR1GAVWiclfMexgKGEoYHgMo39HJvU94B0Mj4C3BbyfMTzBUE8Uh4Od7iw0S8RmGd0Wn5iKLcN8hWsn7HAJMbclCk0O-IbG1UWwU4SF0KEjY3x17rls_PE_X75uMf74o8My_sgeXk9KyQoS9APZCL8QfEvwhOC_Cf4r3zufr2QbeohoHveI4nFPKB73dMbjzsC4xyjpooaoXheEH4rfBcGI4nlom3CzZi495z-BWadUV0S_E_wjogWqueH0GSpuUPQpFlw6bi_DjyIvBAT0Or8jxf6zf2H7fW_ILrv3HhL8CGXmCZ2izHJGQ0VPCH5afOhRlvrcH76IiENMuN6HASbOPc-H5GJBtKurGuQQjTNMiFmWIqgQtERCRA6Tb1SQw2b2bmBBLSL2I-IAE59u-n74C-KvKJkMp-sqBHlB7Sipn5aW-qE3jxrptqjOaQbTUXXhLiPDhvAJL1sio6kdUUeRUZWI2IuIauIritUKJkgAj_G9iwvXmVBDTENtwSRqR4ygRJSlkdwm0LtfYZ_P2-7fJua2nF7fLtPZZiSRO7cs4phtVY42VUiSXRWLpQpsXQmcXwLXl15mlBU1MXbubLrQdLFNSWyGqWqU3KbJXDfwI8sQZwKFIp6YZBSVuL1Uo6Y5aZ-S5aQDSpKLrF4xySWBgxzbIQYJYj39s6nUsy65fEdSZZdgQGRBq1krVg8XdyXJ_BHw7o3jB4nkUvM-O6PS_Td0mjW6RpCCDdEki8KrqikDrVomw8tiTFsGH2uTg1w_k6fmCtJfp7Wme5u2pOg4W_b1oHpAtY2Hy2dwsJ3lVVF-u1BtbY-qNke0ao9zBrL8vFASd9TnLsWOCoW3R3i8ydRlvbAtU58XtWLNbrBMxLojcBl-_8NgrNxcaXavDFsbClvPFrlcP89_Hlvh_reT_yC3PYXntNsp3P9p7s0Wv43BZWJN4WO-vnk2nBZf29fpyzO-Ge3CnYjYMMkXLHbpDvMUy7xDgYJ7-h8YyRT-3hq6OBFHOJG9D_QCl50f2_5fCKaDqXvDP_4jrUvcrCnfQ09hR_3R1cZXdf0x_rgj6maXGqp0w2wwnKI2C0hz1G7q5LCZ-V7kNLLGZdzcRj0ObnL--BtXu45TdR24dsDp00zVtqDa1YQLSqoiRit1cYuWugTK44Q08yYBJaRG3OIN9TXiLeUxQqa8RbyafonIlLoyla6TVP2vnaoLTj-vK6lqYbbStbNIpSusb621vAX3ou8wzH2Hx-xyRu75jJT2rGQpPN2wZRApJaWkDA3T1f17beK_yU4ueW4mAAA%3D
*
 */
