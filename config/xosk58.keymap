/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Qwerty58Layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1       &kp N2          &kp N3          &kp N4            &kp N5                                      &kp N6       &kp N7             &kp N8           &kp N9           &kp N0               &kp BACKSPACE
&kp TAB    &kp Q        &kp W           &kp E           &kp R             &kp T                                       &kp Y        &kp U              &kp I            &kp O            &kp P                &kp BACKSLASH
&kp LCTRL  &mt LCTRL A  &mt LEFT_GUI S  &mt LEFT_ALT D  &mt LEFT_SHIFT F  &kp G                                       &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_ALT K  &mt RIGHT_GUI L  &mt RCTRL SEMICOLON  &kp ENTER
&kp LSHFT  &kp Z        &kp X           &kp C           &kp V             &kp B         &kp LBKT     &kp RBKT         &kp N        &kp M              &kp COMMA        &kp DOT          &kp FSLH             &kp RIGHT_SHIFT
                                        &kp LALT        &lt 1 TAB         &lt 2 ESCAPE  &lt 3 ENTER  &lt 4 BACKSPACE  &lt 5 SPACE  &lt 6 DEL          &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "Qwerty58";
        };

        MediaLayer {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans                         &trans            &trans             &trans           &trans      &trans  &trans
&trans  &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)  &kp LG(T)                      &trans            &trans             &trans           &trans      &trans  &trans
&trans  &kp LG(A)  &kp LG(S)  &kp LG(D)  &kp LG(F)  &kp LG(G)                      &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &trans  &trans      &trans            &kp C_BRI_DEC      &kp C_BRI_INC    &trans      &trans  &trans
                              &trans     &trans     &trans     &trans  &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE         &trans
            >;

            label = "Media";
        };

        SymbolLayer {
            bindings = <
&trans  &trans           &trans      &trans                &trans                 &trans                                         &trans         &trans        &trans        &trans        &trans     &trans
&trans  &kp EXCLAMATION  &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE                                      &kp PIPE       &kp N7        &kp N8        &kp N9        &kp PLUS   &trans
&trans  &kp HASH         &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE                                 &kp AMPERSAND  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans
&trans  &kp PERCENT      &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE       &kp DOUBLE_QUOTES  &kp SQT     &kp BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp STAR   &trans
                                     &trans                &trans                 &trans          &trans             &kp PERIOD  &kp N0         &kp EQUAL     &trans
            >;

            label = "Symbol";
        };

        NavigationLayer {
            bindings = <
&trans    &kp LS(EXCL)   &kp LS(AT)        &kp LS(POUND)     &kp LS(DLLR)      &kp LS(PRCNT)                                   &kp LS(CARET)   &kp LS(AMPS)    &kp LS(STAR)  &kp LS(LPAR)     &kp LS(RPAR)  &trans
&trans    &kp LG(LS(Q))  &kp LG(N7)        &kp LG(N8)        &kp LG(N9)        &kp LG(N0)                                      &kp K_COPY      &kp K_CUT       &kp K_UNDO    &kp K_REDO       &kp K_PASTE   &kp LS(PIPE)
&trans    &trans         &kp LG(NUMBER_4)  &kp LG(N5)        &kp LG(NUMBER_6)  &trans                                          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp CAPS      &kp LS(RET)
&kp CAPS  &kp LSHFT      &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans         &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp HOME        &kp PG_DN       &kp PG_UP     &kp END          &kp INSERT    &trans
                                           &trans            &trans            &trans         &trans          &trans           &trans          &trans          &trans
            >;

            label = "Navigation";
        };

        MouseLayer {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7        &kt F8        &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp LS(LPAR)  &kp LS(RPAR)  &trans  &trans   &trans
&trans  &tog 5  &trans  &trans  &trans  &trans                  &trans  &kp LS(LBRC)  &kp LS(RBRC)  &trans  &trans   &trans
&trans  &mo 7   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LBKT      &kp RBKT      &trans  &mo 7    &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans
            >;

            label = "Mouse";
        };

        NumberLayer {
            bindings = <
&trans  &trans     &trans  &trans   &trans  &trans                        &trans     &trans  &trans      &trans  &trans    &trans
&trans  &kp GRAVE  &kp N7  &kp N8   &kp N9  &kp N0                        &kp GRAVE  &kp N7  &kp N8      &kp N9  &kp N0    &trans
&trans  &kp MINUS  &kp N4  &kp N5   &kp N6  &kp LBKT                      &kp MINUS  &kp N4  &kp N5      &kp N6  &kp LBKT  &trans
&trans  &kp EQUAL  &kp N1  &kp N2   &kp N3  &kp RBKT  &trans    &trans    &kp EQUAL  &kp N1  &kp N2      &kp N3  &kp RBKT  &trans
                           &kp DOT  &kp N0  &kp SQT   &kp BSLH  &kp BSLH  &kp SQT    &trans  &kp PERIOD
            >;

            label = "Number";
        };

        FunctionLayer {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp PAUSE_BREAK                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans
            >;

            label = "Function";
        };

        BluetoothPowerLayer {
            bindings = <
&trans  &trans      &trans        &trans        &trans        &trans                      &trans      &trans        &trans        &trans        &trans      &trans
&trans  &sys_reset  &bootloader   &out OUT_BLE  &out OUT_USB  &to 8                       &to 8       &out OUT_USB  &out OUT_BLE  &bootloader   &sys_reset  &trans
&trans  &trans      &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 4  &trans                      &trans      &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans
&trans  &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans      &trans
                                  &trans        &trans        &trans      &trans  &trans  &trans      &trans        &trans
            >;

            label = "BluetoothPower";
        };

        LockLayer {
            bindings = <
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &mo 9  &mo 9  &none  &none  &none
            >;

            label = "Lock";
        };

        UnlockLayer {
            bindings = <
&none  &none   &none  &none  &none  &none                  &none  &none  &none  &none  &none   &none
&none  &none   &none  &none  &none  &none                  &none  &none  &none  &none  &none   &none
&none  &none   &none  &none  &none  &none                  &none  &none  &none  &none  &none   &none
&none  &mo 10  &none  &none  &none  &none  &none   &none   &none  &none  &none  &none  &mo 10  &none
                      &none  &none  &none  &trans  &trans  &none  &none  &none
            >;

            label = "Unlock";
        };

        UnlockConfirmLayer {
            bindings = <
&none  &none   &none  &none  &none   &none                   &none   &none   &none  &none  &none   &none
&none  &none   &none  &none  &to 12  &to 0                   &to 0   &to 12  &none  &none  &none   &none
&none  &none   &none  &none  &to 13  &to 11                  &to 11  &to 13  &none  &none  &none   &none
&none  &trans  &none  &none  &none   &none   &none   &none   &none   &none   &none  &none  &trans  &none
                      &none  &none   &none   &trans  &trans  &none   &none   &none
            >;

            label = "UnlockConfirm";
        };

        rsthanoi58Layer {
            bindings = <
&trans  &trans              &trans          &trans          &trans            &trans                            &trans         &trans            &trans           &trans           &trans       &trans
&trans  &kp Z               &kp C           &kp P           &kp M             &kp SINGLE_QUOTE                  &kp SEMICOLON  &trans            &kp L            &kp Y            &kp Q        &trans
&trans  &mt LEFT_CONTROL R  &mt LEFT_GUI S  &mt LEFT_ALT T  &mt LEFT_SHIFT H  &kp K                             &kp V          &mt LEFT_SHIFT A  &mt RIGHT_ALT N  &mt RIGHT_GUI O  &mt LCTRL I  &trans
&trans  &kp W               &trans          &kp F           &kp D             &trans            &trans  &trans  &kp J          &kp G             &trans           &trans           &trans       &trans
                                            &trans          &trans            &lt 3 E           &trans  &trans  &trans         &trans            &trans
            >;

            label = "rsthanoi58";
        };

        Qwerty32Layer {
            bindings = <
&none  &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans  &none   &none   &trans  &trans  &trans  &trans  &trans  &none
                       &none   &trans  &trans  &trans  &trans  &trans  &trans  &none
            >;

            label = "Qwerty32";
        };

        rsthanoi32Layer {
            bindings = <
&none  &none               &none           &none           &none             &none                           &none          &none             &none            &none            &none        &none
&none  &kp Z               &kp C           &kp P           &kp M             &kp APOSTROPHE                  &kp SEMICOLON  &trans            &kp L            &kp Y            &kp Q        &none
&none  &mt LEFT_CONTROL R  &mt LEFT_GUI S  &mt LEFT_ALT T  &mt LEFT_SHIFT H  &kp K                           &kp V          &mt LEFT_SHIFT A  &mt RIGHT_ALT N  &mt RIGHT_GUI O  &mt LCTRL I  &none
&none  &kp W               &trans          &kp F           &kp D             &trans          &trans  &trans  &kp J          &kp G             &trans           &trans           &trans       &none
                                           &none           &trans            &lt 3 E         &trans  &trans  &trans         &trans            &none
            >;

            label = "rsthanoi32";
        };

        Mask32Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Mask32";
        };
    };
};
